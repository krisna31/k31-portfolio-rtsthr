/* eslint-disable @typescript-eslint/no-explicit-any */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/assets/Background/bg.glb -t
*/

import * as THREE from 'three'
import React, { useRef, useLayoutEffect } from 'react'
import { GLTF } from 'three-stdlib'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";

type GLTFResult = GLTF & {
    nodes: {
        Object_4: THREE.Mesh
        Object_2: THREE.Mesh
        Sphere_Material002_0: THREE.Mesh
        Sphere_Material_0: THREE.Mesh
        Sphere_Material002_0001: THREE.Mesh
        Sphere_Material002_0005: THREE.Mesh
        Sphere_Material002_0003: THREE.Mesh
        Object_6: THREE.Mesh
        Object_4001: THREE.Mesh
        Sphere_Material002_0002: THREE.Mesh
        k31: THREE.Mesh
    }
    materials: {
        ['.003']: THREE.MeshStandardMaterial
        material: THREE.MeshStandardMaterial
        ['Material.002']: THREE.MeshStandardMaterial
        ['Material.001']: THREE.MeshStandardMaterial
        ['Material.003']: THREE.MeshStandardMaterial
        ['Material.007']: THREE.MeshStandardMaterial
        ['Material.005']: THREE.MeshStandardMaterial
        star: THREE.MeshStandardMaterial
        ['Material.004']: THREE.MeshStandardMaterial
        profile: THREE.MeshStandardMaterial
    }
}

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function MyBG(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF('/assets/model/bg.glb') as GLTFResult

    const parentRef: any = useRef();
    const tl: React.MutableRefObject<gsap.core.Timeline> = useRef(gsap.timeline());
    const bgRef: any = useRef();
    const k31: any = useRef();
    const planetRef: any = useRef();

    const scroll = useScroll();

    useFrame(() => {
        tl.current.seek(scroll.offset * tl.current.duration());

        k31.current.rotation.y += 0.001;
        k31.current.rotation.x += 0.001;

        planetRef.current.rotation.x += 0.001;
        planetRef.current.rotation.y += 0.001;
    });

    useLayoutEffect(() => {
        tl.current = gsap.timeline();

        // VERTICAL ANIMATION
        tl.current.to(
            parentRef.current.position,
            {
                duration: 1.5,
                y: -35,
            },
            0
        );

        // bg rotation
        tl.current.to(
            bgRef.current.rotation,
            { duration: 1, x: 0, y: Math.PI / 3, z: 0 },
            0
        )
    }, []);

    return (
        <group {...props} dispose={null} ref={parentRef}>
            <mesh ref={bgRef} geometry={nodes.Object_4.geometry} material={materials['.003']} scale={194.172} />
            <group position={[-1.515, 6.428, 0.787]} rotation={[-Math.PI / 2, 0, 0]} scale={1.078} ref={planetRef} onClick={() => {
                planetRef.current.scale.x += 1;
                planetRef.current.scale.y += 1;
                planetRef.current.scale.z += 1;
            }}>
                <mesh geometry={nodes.Object_2.geometry} material={materials.material} position={[-0.571, -8.532, 2.774]} />
            </group>
            <group position={[-2.195, 3.756, 0.069]} rotation={[-Math.PI / 2, 0, 0]} scale={0.009}>
                <group scale={100}>
                    <mesh geometry={nodes.Sphere_Material002_0.geometry} material={materials['Material.002']} position={[0.127, -6.526, -0.268]} />
                </group>
            </group>
            <group position={[-8.076, 14.222, 5.526]} rotation={[-Math.PI / 2, 0, 0]} scale={0.026}>
                <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                    <group position={[0.002, -0.004, -0.002]}>
                        <mesh geometry={nodes.Sphere_Material_0.geometry} material={materials['Material.001']} position={[0.002, -0.004, -0.002]} rotation={[-Math.PI / 2, 0, 0]} scale={101} />
                    </group>
                </group>
            </group>
            <group position={[-5.631, 23.905, 0.909]} rotation={[-Math.PI / 2, 0, 0]} scale={0.012}>
                <group rotation={[Math.PI / 2, 0, 0]}>
                    <mesh geometry={nodes.Sphere_Material002_0001.geometry} material={materials['Material.003']} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                </group>
            </group>
            <group position={[-2.796, 11.665, -4.468]} rotation={[-Math.PI / 2, 0, 0]} scale={0.009}>
                <group scale={100}>
                    <mesh geometry={nodes.Sphere_Material002_0005.geometry} material={materials['Material.007']} position={[-2.555, -9.851, 11.242]} />
                </group>
            </group>
            <group position={[-2.778, 11.741, -0.824]} rotation={[-Math.PI / 2, 0, 0]} scale={0.004}>
                <group scale={100}>
                    <mesh geometry={nodes.Sphere_Material002_0003.geometry} material={materials['Material.005']} position={[3.706, -19.153, -14.911]} />
                </group>
            </group>
            <group position={[-9.514, 44.453, 99.432]} rotation={[-Math.PI / 2, 0, 0]} scale={0.385}>
                <group rotation={[Math.PI / 2, 0, 0]}>
                    <mesh geometry={nodes.Object_6.geometry} material={materials.star} position={[0, 0, 0.567]} rotation={[Math.PI / 2, 0, 0]} scale={2.506} />
                    <mesh geometry={nodes.Object_4001.geometry} material={materials.star} rotation={[Math.PI / 2, 0, 3.135]} scale={2.506} />
                </group>
            </group>
            <group position={[-4.266, 18.147, 1.568]} rotation={[-Math.PI / 2, 0, 0]} scale={0.022}>
                <group scale={100}>
                    <mesh geometry={nodes.Sphere_Material002_0002.geometry} material={materials['Material.004']} position={[-0.546, -4.702, 2.511]} />
                </group>
            </group>
            <mesh geometry={nodes.k31.geometry} material={materials.profile} position={[0, 1.2, 0]} rotation={[1.465, 0.013, 0.414]} ref={k31} />
        </group>
    )
}

useGLTF.preload('/assets/model/bg.glb');
